parameters:
  environment:
  umbracoSemanticVersion:
  instanceIdentifier:
  serviceConnectionName:

jobs:
  - deployment: Provisioning_Azure_App_Service
    displayName: Provision infrastructure for ${{ parameters.environment }}
    continueOnError: false
    pool:
      vmImage: "ubuntu-latest"
    environment: ${{ parameters.environment }}
    variables:
      tfBackendResourceGroupName: 'rg-tf-backend-storage'
      tfBackendStorageAccountName: 'sttfbackend34587'
      tfBackendStorageContainerName: 'tf-backend-files'
      tfBackendFileName: "${{ parameters.environment }}-tf-state-file"
      tfvarsFile: "${{ parameters.environment }}.tfvars"
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureCLI@2
              inputs:
                azureSubscription: ${{ parameters.serviceConnectionName }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  echo '#######Setting Azure Service Principal Environment Variables########'
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_SUBSCRIPTION_ID=$(az account show | jq '.id' -r)
                  export ARM_TENANT_ID=$tenantId

                  echo '#######Terraform Init########'
                  terraform init -backend-config="resource_group_name=${{ variables.tfBackendResourceGroupName }}" -backend-config="storage_account_name=${{ variables.tfBackendStorageAccountName }}" -backend-config="container_name=${{ variables.tfBackendStorageContainerName }}" -backend-config="key=${{ variables.tfBackendFileName }}"  

                  echo '#######Terraform Plan########'
                  terraform plan -var-file="../tf-vars/${{ variables.tfvarsFile }}" \
                    -out="out.plan" \
                    -var='package_source_url=http://umbracoreleases.blob.core.windows.net/download/UmbracoCms.${{ parameters.umbracoSemanticVersion }}.zip' \
                    -var='instance_id=${{ parameters.instanceIdentifier }}'    

                  echo '#######Terraform Apply########'
                  terraform apply out.plan 
                addSpnToEnvironment: true
                workingDirectory: '$(System.DefaultWorkingDirectory)/tf-envs/${{ parameters.environment }}'
              displayName: 'Terraform apply'
